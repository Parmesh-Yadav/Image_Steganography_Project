var canvas = document.getElementById("canvas"), ctx = canvas.getContext("2d"); canvas.width = window.innerWidth, canvas.height = .9 * window.innerHeight; for (var stars = [], FPS = 60, x = 300, mouse = { x: 0, y: 0 }, i = 0; i < x; i++)stars.push({ x: Math.random() * canvas.width, y: Math.random() * canvas.height, radius: +Math.random() + 1, vx: Math.floor(50 * Math.random()) - 25, vy: Math.floor(50 * Math.random()) - 25 }); function draw() { ctx.clearRect(0, 0, canvas.width, canvas.height), ctx.globalCompositeOperation = "lighter"; for (var t = 0, a = stars.length; t < a; t++) { var e = stars[t]; ctx.fillStyle = "#000", ctx.beginPath(), ctx.arc(e.x, e.y, e.radius, 0, 2 * Math.PI), ctx.fill(), ctx.fillStyle = "black", ctx.stroke() } ctx.beginPath(); for (t = 0, a = stars.length; t < a; t++) { var n = stars[t]; ctx.moveTo(n.x, n.y), distance(mouse, n) < 150 && ctx.lineTo(mouse.x, mouse.y); for (var r = 0, a = stars.length; r < a; r++) { var s = stars[r]; distance(n, s) < 150 && ctx.lineTo(s.x, s.y) } } ctx.lineWidth = .05, ctx.strokeStyle = "purple", ctx.stroke() } function distance(t, a) { var e = 0, n = 0, e = a.x - t.x; return e *= e, n = a.y - t.y, n *= n, Math.sqrt(e + n) } function update() { for (var t = 0, a = stars.length; t < a; t++) { var e = stars[t]; e.x += e.vx / FPS, e.y += e.vy / FPS, (e.x < 0 || e.x > canvas.width) && (e.vx = -e.vx), (e.y < 0 || e.y > canvas.height) && (e.vy = -e.vy) } } function tick() { draw(), update(), requestAnimationFrame(tick) } canvas.addEventListener("mousemove", function (t) { mouse.x = t.clientX, mouse.y = t.clientY }), tick();